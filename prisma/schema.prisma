// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator authClient {
  provider = "prisma-client-js"
  output   = "../microservices/auth-svc/node_modules/.prisma/client"
}

generator userClient {
  provider = "prisma-client-js"
  output   = "../microservices/users-svc/node_modules/.prisma/client"
}

generator ticketClient {
  provider = "prisma-client-js"
  output   = "../microservices/tickets-svc/node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  TODO
  IN_PROGRESS
  IN_REVIEW
  DONE
}

model User {
  id              String           @id @default(cuid())
  email           String           @unique
  name            String?
  password        String
  avatar          String?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  tickets         Ticket[]
  assignedTickets AssigneeTicket[]
  ticketHistories   TicketHistory[]
}

model AssigneeTicket {
  assigneeId String
  ticketId   String
  assignee   User   @relation(fields: [assigneeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ticket     Ticket @relation(fields: [ticketId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([assigneeId, ticketId])
}

model Ticket {
  id          String           @id @default(cuid())
  creatorId   String
  creator     User             @relation(fields: [creatorId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  assignees   AssigneeTicket[]
  title       String
  description String
  status      Status
  points      Int
  histories   TicketHistory[]
  dueDate     DateTime?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model TicketHistory {
  id        String   @id @default(cuid())
  ticketId  String
  ticket    Ticket   @relation(fields: [ticketId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  title     String
  createdAt DateTime @default(now())
}
